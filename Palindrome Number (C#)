Given an integer x, return true if x is a 
palindrome
, and false otherwise.

 

Example 1:

Input: x = 121
Output: true
Explanation: 121 reads as 121 from left to right and from right to left.
Example 2:

Input: x = -121
Output: false
Explanation: From left to right, it reads -121. From right to left, it becomes 121-. Therefore it is not a palindrome.
Example 3:

Input: x = 10
Output: false
Explanation: Reads 01 from right to left. Therefore it is not a palindrome.
 

Constraints:

-231 <= x <= 231 - 1
 

Follow up: Could you solve it without converting the integer to a string?

//***********************************************************************************************************************************************

//Answer:


public class Solution {
    public bool IsPalindrome(int x) {
        // will have to get the lenght of the int thus need to convert it to a string 
        // x.ToString().Length
        
        string myStr = x.ToString();
        int j = 1;

        for (int i =0; i < myStr.Length; i++)
        {
            if (myStr[i] != myStr[myStr.Length - j])
            {
                return false;
                j++;
            }
            j++;
            
        }
        return true;
    }
}
